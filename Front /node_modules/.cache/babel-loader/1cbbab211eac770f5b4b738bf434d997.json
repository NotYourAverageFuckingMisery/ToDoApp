{"ast":null,"code":"var _jsxFileName = \"/Users/aleksejponomarev/REACT/todoes/src/ToDoList.js\";\nimport React from 'react';\nimport ToDo from './ToDo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoList = _ref => {\n  let {\n    toDoes,\n    options,\n    handleStatus,\n    setWorldEater\n  } = _ref;\n  let completedTodoes = [];\n  let activeTodoes = [];\n\n  if (toDoes !== undefined && toDoes !== null) {\n    for (let i = 0; i < toDoes.length; i++) {\n      if (toDoes[i].todo_status === false) {\n        activeTodoes.push(toDoes[i]);\n      } else {\n        completedTodoes.push(toDoes[i]);\n      }\n    }\n  }\n\n  let resultMap = [];\n  let writing;\n\n  if (options === \"Active\") {\n    resultMap = activeTodoes;\n    writing = \"My active todoes:\";\n  } else if (options === \"Completed\") {\n    resultMap = completedTodoes;\n    writing = \"My completed todoes:\";\n  }\n\n  if (toDoes !== undefined && toDoes !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"secHeader\",\n        children: writing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"toDoList\",\n        children: resultMap.map(Todo => /*#__PURE__*/_jsxDEV(ToDo, {\n          Todo: Todo,\n          options: options,\n          handleStatus: handleStatus\n        }, Todo.todo_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: options === \"Active\" ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"secHeader\",\n        children: \"You have no active todoes!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"secHeader\",\n        children: \"You have no completed todoes!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","ToDo","ToDoList","toDoes","options","handleStatus","setWorldEater","completedTodoes","activeTodoes","undefined","i","length","todo_status","push","resultMap","writing","map","Todo","todo_id"],"sources":["/Users/aleksejponomarev/REACT/todoes/src/ToDoList.js"],"sourcesContent":["import React from 'react'\nimport ToDo from './ToDo'\n\nconst ToDoList = ({toDoes, options, handleStatus, setWorldEater}) => {\n\n    let completedTodoes = []\n    let activeTodoes = []\n\n    if (toDoes!== undefined && toDoes !== null) {\n\n    for (let i = 0; i < toDoes.length; i++) {\n        if (toDoes[i].todo_status === false) {\n            activeTodoes.push(toDoes[i])\n        } else {\n            completedTodoes.push(toDoes[i])\n        }\n    }\n\n\n    \n    }\n\n   \n\n    let resultMap = []\n    let writing\n    if (options === \"Active\") {\n        resultMap = activeTodoes\n        writing = \"My active todoes:\"\n    } else if (options === \"Completed\") {\n        resultMap = completedTodoes\n        writing = \"My completed todoes:\"\n    }\n\n    if (toDoes !== undefined && toDoes !== null) {\n  return (\n    <div>\n        <h3 className='secHeader'>{writing}</h3>\n        <ul className='toDoList'>\n            {resultMap.map((Todo) => (\n                <ToDo \n                key={Todo.todo_id}\n                Todo={Todo}\n                options={options}\n                handleStatus={handleStatus}/>\n            ))}\n        </ul>\n    </div>\n  )\n} else {\n    return (\n        <div>\n            {options === \"Active\" ? \n            <h3 className='secHeader'>You have no active todoes!</h3> : \n            <h3 className='secHeader'>You have no completed todoes!</h3>}\n        </div>\n    )\n}\n}\n\nexport default ToDoList\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,QAAQ,GAAG,QAAoD;EAAA,IAAnD;IAACC,MAAD;IAASC,OAAT;IAAkBC,YAAlB;IAAgCC;EAAhC,CAAmD;EAEjE,IAAIC,eAAe,GAAG,EAAtB;EACA,IAAIC,YAAY,GAAG,EAAnB;;EAEA,IAAIL,MAAM,KAAIM,SAAV,IAAuBN,MAAM,KAAK,IAAtC,EAA4C;IAE5C,KAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,MAAM,CAACQ,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;MACpC,IAAIP,MAAM,CAACO,CAAD,CAAN,CAAUE,WAAV,KAA0B,KAA9B,EAAqC;QACjCJ,YAAY,CAACK,IAAb,CAAkBV,MAAM,CAACO,CAAD,CAAxB;MACH,CAFD,MAEO;QACHH,eAAe,CAACM,IAAhB,CAAqBV,MAAM,CAACO,CAAD,CAA3B;MACH;IACJ;EAIA;;EAID,IAAII,SAAS,GAAG,EAAhB;EACA,IAAIC,OAAJ;;EACA,IAAIX,OAAO,KAAK,QAAhB,EAA0B;IACtBU,SAAS,GAAGN,YAAZ;IACAO,OAAO,GAAG,mBAAV;EACH,CAHD,MAGO,IAAIX,OAAO,KAAK,WAAhB,EAA6B;IAChCU,SAAS,GAAGP,eAAZ;IACAQ,OAAO,GAAG,sBAAV;EACH;;EAED,IAAIZ,MAAM,KAAKM,SAAX,IAAwBN,MAAM,KAAK,IAAvC,EAA6C;IAC/C,oBACE;MAAA,wBACI;QAAI,SAAS,EAAC,WAAd;QAAA,UAA2BY;MAA3B;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAI,SAAS,EAAC,UAAd;QAAA,UACKD,SAAS,CAACE,GAAV,CAAeC,IAAD,iBACX,QAAC,IAAD;UAEA,IAAI,EAAEA,IAFN;UAGA,OAAO,EAAEb,OAHT;UAIA,YAAY,EAAEC;QAJd,GACKY,IAAI,CAACC,OADV;UAAA;UAAA;UAAA;QAAA,QADH;MADL;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAcD,CAfG,MAeG;IACH,oBACI;MAAA,UACKd,OAAO,KAAK,QAAZ,gBACD;QAAI,SAAS,EAAC,WAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADC,gBAED;QAAI,SAAS,EAAC,WAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAHJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAOH;AACA,CAvDD;;KAAMF,Q;AAyDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}