{"ast":null,"code":"var _jsxFileName = \"/Users/aleksejponomarev/REACT/todoes/src/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // login must be in any letters A-Z, any number and from 3 to 20 char long\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOGIN_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,20}$/; // pass require at least one of symbols inside [ ]\n\nconst PASS_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,20}$/;\nconst NAME_REGEX = /^[a-zA-Zа-яА-Я][a-zA-Zа-яА-Я0-9_ ]{1,20}$/;\n\nconst Register = () => {\n  _s();\n\n  //пиздец я ж запутаюсь в этой поебени\n  const loginRef = useRef();\n  const errRef = useRef();\n  const [logins, setLogins] = useState([]);\n  const [arrayLogins, setArrayLogins] = useState([]);\n  const [errMsg, setErrMsg] = useState('');\n  const [login, setLogin] = useState('');\n  const [validLogin, setValidLogin] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n  const [isAvalible, setIsAvalible] = useState(true);\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n  const [macthPwd, setMacthPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [name, setName] = useState('');\n  const [validName, setValidName] = useState(false);\n  const [nameFocus, setNameFocus] = useState(false);\n  useEffect(() => {\n    const fetchLogins = async () => {\n      fetch(\"http://localhost:8081/register\").then(response => response.json()).then(data => setLogins(data.all_logins));\n    };\n\n    fetchLogins();\n  }, []);\n\n  if (logins[0] !== undefined) {\n    useEffect(() => {\n      loginRef.current.focus();\n    }, []);\n    useEffect(() => {\n      const result = LOGIN_REGEX.test(login);\n      setValidLogin(result);\n\n      for (let i = 0; i < logins.length; i++) {\n        login === logins[i].user_login ? setIsAvalible(false) : setIsAvalible(true);\n      }\n\n      console.log(logins[0].user_login);\n    }, [login, logins]);\n    useEffect(() => {\n      const result = NAME_REGEX.test(name);\n      setValidName(result);\n    }, [name]);\n    useEffect(() => {\n      const result = PASS_REGEX.test(pwd);\n      setValidPwd(result);\n      const match = pwd === macthPwd;\n      setValidMatch(match);\n    }, [pwd, macthPwd]);\n    useEffect(() => {\n      setErrMsg('');\n    }, [login, pwd, macthPwd, name]);\n\n    const handleSubmit = async e => {\n      e.preventDefault(); //EXTRA SECURITY\n\n      const v1 = LOGIN_REGEX.test(login);\n      const v2 = PASS_REGEX.test(pwd);\n\n      if (!v1 || !v2) {\n        setErrMsg(\"Invalid entry\");\n        return;\n      } //END OF EXTRA SECURITY\n\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userlogin\",\n          children: [\"Login:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validLogin && isAvalible ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validLogin || !login || !isAvalible ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"userlogin\",\n          ref: loginRef,\n          autoComplete: \"off\",\n          onChange: e => setLogin(e.target.value),\n          required: true,\n          \"aria-invalid\": validLogin ? \"false\" : \"true\" && isAvalible ? \"false\" : \"true\",\n          \"aria-describedby\": \"uidnote\",\n          onFocus: () => setUserFocus(true),\n          onBlur: () => setUserFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"uidnote\",\n          className: userFocus && login && !validLogin ? \"instructions\" : \"offscreen\",\n          children: [\"4 to 20 symbols. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 34\n          }, this), \"Must begin with a letter.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"uidnote\",\n          className: !isAvalible ? \"instructions\" : \"offscreen\",\n          children: \"This login is allready taken!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: [\"User name:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validName ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validName || !name ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          onChange: e => setName(e.target.value),\n          required: true,\n          \"aria-invalid\": validName ? \"false\" : \"true\",\n          \"aria-describedby\": \"namenote\",\n          onFocus: () => setNameFocus(true),\n          onBlur: () => setNameFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"namenote\",\n          className: nameFocus && name && !validName ? \"instructions\" : \"offscreen\",\n          children: [\"4 to 20 symbols. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 34\n          }, this), \"Must begin with a letter.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userpassword\",\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validPwd ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validPwd || !pwd ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => setPwd(e.target.value),\n          required: true,\n          \"aria-invalid\": validPwd ? \"false\" : \"true\",\n          \"aria-describedby\": \"pwdnote\",\n          onFocus: () => setPwdFocus(true),\n          onBlur: () => setPwdFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"pwdnote\",\n          className: pwdFocus && pwd && !validPwd ? \"instructions\" : \"offscreen\",\n          children: [\"8 to 20 symbols. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 34\n          }, this), \"Must have at least one uncapitalised letter, \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 62\n          }, this), \"one capital and a number.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm_pwd\",\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validMatch && macthPwd ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validMatch || !macthPwd ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm_pwd\",\n          onChange: e => setMacthPwd(e.target.value),\n          required: true,\n          \"aria-invalid\": validMatch ? \"false\" : \"true\",\n          \"aria-describedby\": \"confirmnote\",\n          onFocus: () => setMatchFocus(true),\n          onBlur: () => setMatchFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"confirmnote\",\n          className: matchFocus && !validMatch ? \"instructions\" : \"offscreen\",\n          children: \"Must match the first password input field.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !validLogin || !validName || !validPwd || !validMatch || !isAvalible ? true : false,\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Back to login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this);\n  }\n};\n\n_s(Register, \"kTe8Z4H5U2o8mJuDeMg5djUP70o=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useEffect","useState","Link","useRef","faCheck","faTimes","FontAwesomeIcon","LOGIN_REGEX","PASS_REGEX","NAME_REGEX","Register","loginRef","errRef","logins","setLogins","arrayLogins","setArrayLogins","errMsg","setErrMsg","login","setLogin","validLogin","setValidLogin","userFocus","setUserFocus","isAvalible","setIsAvalible","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","macthPwd","setMacthPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","name","setName","validName","setValidName","nameFocus","setNameFocus","fetchLogins","fetch","then","response","json","data","all_logins","undefined","current","focus","result","test","i","length","user_login","console","log","match","handleSubmit","e","preventDefault","v1","v2","target","value"],"sources":["/Users/aleksejponomarev/REACT/todoes/src/Register.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useRef } from 'react'\nimport {faCheck, faTimes} from \"@fortawesome/free-solid-svg-icons\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\n\n// login must be in any letters A-Z, any number and from 3 to 20 char long\nconst LOGIN_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,20}$/\n// pass require at least one of symbols inside [ ]\nconst PASS_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,20}$/\nconst NAME_REGEX = /^[a-zA-Zа-яА-Я][a-zA-Zа-яА-Я0-9_ ]{1,20}$/\n\nconst Register = () => {\n\n    //пиздец я ж запутаюсь в этой поебени\n    const loginRef = useRef();\n    const errRef = useRef();\n\n    const [logins, setLogins] = useState([])\n    const [arrayLogins, setArrayLogins] = useState([])\n\n    const [errMsg, setErrMsg] = useState('');\n\n    const [login, setLogin] = useState('');\n    const [validLogin, setValidLogin] = useState(false);\n    const [userFocus, setUserFocus] = useState(false);\n    const [isAvalible, setIsAvalible] = useState(true)\n\n    const [pwd, setPwd] = useState('');\n    const [validPwd, setValidPwd] = useState(false);\n    const [pwdFocus, setPwdFocus] = useState(false);\n\n    const [macthPwd, setMacthPwd] = useState('');\n    const [validMatch, setValidMatch] = useState(false);\n    const [matchFocus, setMatchFocus] = useState(false);\n\n    const [name, setName] = useState('');\n    const [validName, setValidName] = useState(false);\n    const [nameFocus, setNameFocus] = useState(false);\n\n    useEffect(() => {\n        const fetchLogins = async () => {\n            fetch(\"http://localhost:8081/register\")\n            .then(response => response.json())\n            .then(data => setLogins(data.all_logins))\n        }\n        fetchLogins();\n    }, [])\n\n    if (logins[0] !== undefined) {\n\n    useEffect(() => {\n        loginRef.current.focus();\n    }, [])\n\n    useEffect(() => {\n        const result = LOGIN_REGEX.test(login)\n        setValidLogin(result)\n\n        for (let i = 0; i < logins.length; i++) {\n            login === logins[i].user_login ? setIsAvalible(false) : setIsAvalible(true)\n        }\n        console.log(logins[0].user_login)\n\n    }, [login, logins])\n\n    useEffect(() => {\n        const result = NAME_REGEX.test(name)\n        setValidName(result)\n    }, [name])\n\n\n    useEffect(() => {\n        const result = PASS_REGEX.test(pwd)\n        setValidPwd(result)\n        const match = pwd === macthPwd\n        setValidMatch(match)\n    }, [pwd, macthPwd])\n\n    useEffect(() => {\n        setErrMsg('')\n    }, [login, pwd, macthPwd, name])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        //EXTRA SECURITY\n        const v1 = LOGIN_REGEX.test(login)\n        const v2 = PASS_REGEX.test(pwd)\n        if (!v1 || !v2) {\n            setErrMsg(\"Invalid entry\")\n            return\n        }\n        //END OF EXTRA SECURITY\n    }\n\n  return (\n    <section>\n        <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"}\n        aria-live=\"assertive\">{errMsg}</p>\n        <h1>Register</h1>\n        <form onSubmit={handleSubmit}>\n\n            {/* USER LOGIN VALIDATION FORM*/}\n\n            <label htmlFor='userlogin'>\n                Login:\n                <span className={validLogin && isAvalible ? \"valid\" : \"hide\"}>\n                    <FontAwesomeIcon icon={faCheck}/>\n                </span>\n                <span className={validLogin || !login ||!isAvalible ? \"hide\" : \"invalid\"}>\n                    <FontAwesomeIcon icon={faTimes}/>\n                </span>\n            </label>\n            <input\n            type='text'\n            id='userlogin'\n            ref={loginRef}\n            autoComplete='off'\n            onChange={(e) => setLogin(e.target.value)}\n            required\n            aria-invalid={validLogin ? \"false\": \"true\" && isAvalible ? \"false\" : \"true\"}\n            aria-describedby=\"uidnote\"\n            onFocus={() => setUserFocus(true)}\n            onBlur={() => setUserFocus(false)}\n            />\n            <p id='uidnote' className={userFocus && login && !validLogin ? \"instructions\" : \"offscreen\"}>\n                4 to 20 symbols. <br/>\n                Must begin with a letter.\n            </p>\n            <p id='uidnote' className={!isAvalible ? \"instructions\" : \"offscreen\"}>\n                This login is allready taken!\n            </p>\n\n            {/* USERNAME VALIDATION FORM*/}\n\n            <label htmlFor='username'>\n                User name:\n                <span className={validName ? \"valid\" : \"hide\"}>\n                    <FontAwesomeIcon icon={faCheck}/>\n                </span>\n                <span className={validName || !name ? \"hide\" : \"invalid\"}>\n                    <FontAwesomeIcon icon={faTimes}/>\n                </span>\n            </label>\n            <input\n            type='text'\n            id='username'\n            onChange={(e) => setName(e.target.value)}\n            required\n            aria-invalid={validName ? \"false\": \"true\"}\n            aria-describedby=\"namenote\"\n            onFocus={() => setNameFocus(true)}\n            onBlur={() => setNameFocus(false)}\n            />\n            <p id='namenote' className={nameFocus && name && !validName ? \"instructions\" : \"offscreen\"}>\n                4 to 20 symbols. <br/>\n                Must begin with a letter.\n            </p>\n\n            {/* USER PASSWORD VALIDATION FORM*/}\n\n            <label htmlFor='userpassword'>\n                Password:\n                <span className={validPwd ? \"valid\" : \"hide\"}>\n                    <FontAwesomeIcon icon={faCheck}/>\n                </span>\n                <span className={validPwd || !pwd ? \"hide\" : \"invalid\"}>\n                    <FontAwesomeIcon icon={faTimes}/>\n                </span>\n            </label>\n            <input\n            type='password'\n            id='password'\n            onChange={(e) => setPwd(e.target.value)}\n            required\n            aria-invalid={validPwd ? \"false\": \"true\"}\n            aria-describedby=\"pwdnote\"\n            onFocus={() => setPwdFocus(true)}\n            onBlur={() => setPwdFocus(false)}\n            />\n            <p id='pwdnote' className={pwdFocus && pwd && !validPwd ? \"instructions\" : \"offscreen\"}>\n                8 to 20 symbols. <br/>\n                Must have at least one uncapitalised letter, <br/>\n                one capital and a number.\n            </p>\n\n            {/* MATCHING PASSWORD VALIDATION FORM*/}\n\n            <label htmlFor='confirm_pwd'>\n                Password:\n                <span className={validMatch && macthPwd ? \"valid\" : \"hide\"}>\n                    <FontAwesomeIcon icon={faCheck}/>\n                </span>\n                <span className={validMatch|| !macthPwd ? \"hide\" : \"invalid\"}>\n                    <FontAwesomeIcon icon={faTimes}/>\n                </span>\n            </label>\n            <input\n            type='password'\n            id='confirm_pwd'\n            onChange={(e) => setMacthPwd(e.target.value)}\n            required\n            aria-invalid={validMatch ? \"false\": \"true\"}\n            aria-describedby=\"confirmnote\"\n            onFocus={() => setMatchFocus(true)}\n            onBlur={() => setMatchFocus(false)}\n            />\n            <p id='confirmnote' className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\n                Must match the first password input field.\n            </p>\n\n            {/* Submit button. If there is only one button in <form> it is submit by default*/}\n\n            <button disabled={!validLogin || !validName || !validPwd || !validMatch || !isAvalible ? true : false}>Sign up</button>\n\n        </form>\n        <Link to='/'><h4>Back to login</h4></Link>\n    </section>\n  )\n}\n}\n\nexport default Register"],"mappings":"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"},"metadata":{},"sourceType":"module"}