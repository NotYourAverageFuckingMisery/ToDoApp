{"ast":null,"code":"var _jsxFileName = \"/Users/aleksejponomarev/REACT/todoes/src/UserStats.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserStats = _ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  const [level, setLevel] = useState(0);\n  const score = user.user_score;\n\n  if (score >= 100 & score <= 1000) {\n    setLevel((score - score % 100) / 100);\n  } else if (score > 1000 & score <= 9000) {\n    setLevel(10 + (score - 1000 - score % 200) / 200);\n  } else if (score > 9000) {\n    setLevel(50 + (score - 9000 - score % 300) / 300);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"userStats\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mainHeader\",\n      children: [\"Hello, \", user.user_name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"statsList\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Your level: \", level]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Tasks completed: \", user.user_completed]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Your rank: Ebanko\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserStats, \"9AhEmIbPwsKCuGs12uqyCU/w7CI=\");\n\n_c = UserStats;\nexport default UserStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserStats\");","map":{"version":3,"names":["React","useState","UserStats","user","level","setLevel","score","user_score","user_name","user_completed"],"sources":["/Users/aleksejponomarev/REACT/todoes/src/UserStats.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst UserStats = ({user}) => {\n\nconst [level, setLevel] = useState(0)\nconst score = user.user_score\n\nif (score >= 100 & score <= 1000){\n  setLevel((score - score % 100) / 100)\n} else if (score > 1000 & score <= 9000) {\n  setLevel(10 + (((score - 1000) - score % 200) / 200))\n} else if (score > 9000) {\n  setLevel(50 + (((score - 9000) - score % 300) / 300))\n}\n\n\n  return (\n    <header className='userStats'>\n        <h2 className='mainHeader'>Hello, {user.user_name}!</h2>\n        <ul className='statsList'>\n            <li>Your level: {level}</li>\n            <li>Tasks completed: {user.user_completed}</li>\n            <li>Your rank: Ebanko</li>\n        </ul>\n    </header>\n  )\n}\n\nexport default UserStats"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,SAAS,GAAG,QAAY;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EAE9B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAMK,KAAK,GAAGH,IAAI,CAACI,UAAnB;;EAEA,IAAID,KAAK,IAAI,GAAT,GAAeA,KAAK,IAAI,IAA5B,EAAiC;IAC/BD,QAAQ,CAAC,CAACC,KAAK,GAAGA,KAAK,GAAG,GAAjB,IAAwB,GAAzB,CAAR;EACD,CAFD,MAEO,IAAIA,KAAK,GAAG,IAAR,GAAeA,KAAK,IAAI,IAA5B,EAAkC;IACvCD,QAAQ,CAAC,KAAM,CAAEC,KAAK,GAAG,IAAT,GAAiBA,KAAK,GAAG,GAA1B,IAAiC,GAAxC,CAAR;EACD,CAFM,MAEA,IAAIA,KAAK,GAAG,IAAZ,EAAkB;IACvBD,QAAQ,CAAC,KAAM,CAAEC,KAAK,GAAG,IAAT,GAAiBA,KAAK,GAAG,GAA1B,IAAiC,GAAxC,CAAR;EACD;;EAGC,oBACE;IAAQ,SAAS,EAAC,WAAlB;IAAA,wBACI;MAAI,SAAS,EAAC,YAAd;MAAA,sBAAmCH,IAAI,CAACK,SAAxC;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAI,SAAS,EAAC,WAAd;MAAA,wBACI;QAAA,2BAAiBJ,KAAjB;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,gCAAsBD,IAAI,CAACM,cAA3B;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAxBD;;GAAMP,S;;KAAAA,S;AA0BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}